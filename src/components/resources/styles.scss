@use "sass:math";
@use "sass:color";
@use "sass:map";

@import 'node_modules/bootstrap/scss/bootstrap';

$colorDif: 0.2;
$offsetFactor: 3;

@font-face {
  font-family: 'Montserrat';
  src: url(assets/montserrat.ttf);
}

@function contrastColor($color, $level) {
  $luminace: math.div(color.red($color) * 0.299 + color.green($color) * 0.587 + color.blue($color) * 0.114, 255);

  @if $level ==1 {
    @if $luminace >0.5 {
      @return $gray-800;
    }

    @else {
      @return $gray-300;
    }
  }

  @else if $level ==2 {
    @if $luminace >0.5 {
      @return $gray-600;
    }

    @else {
      @return $gray-500;
    }
  }
}

@function make-theme($theme, $color) {
  $map: (body: $color,
    text: contrastColor($color, 1),
    text-2: contrastColor($color, 2));
  @return $map;
}

$theme-names: (
  "light": #fafafa,
  "dark": #383838
);

$themes: (
);

@each $theme,
$color in $theme-names {
  $themes: map.deep-merge($themes, ($theme: make-theme($theme, $color)));
}

@mixin text {
  font-family: 'Montserrat';
  color: map-get($themes, "light", text);

  @media (prefers-color-scheme: dark) {
    color: map-get($themes, "dark", text);
  }
}

@mixin text-2 {
  font-family: 'Montserrat';
  color: map-get($themes, "light", text-2);

  @media (prefers-color-scheme: dark) {
    color: map-get($themes, "dark", text-2);
  }
}

@mixin text-styles {
  flex: 200px;
  font-size: x-large;
  margin: 10px;
  overflow-wrap: anywhere;

  .name {
    @include text;
    font-size: x-large;
    margin-bottom: 0;
  }

  .company {
    @include text-2;
    font-size: x-large;
    margin-bottom: 0;
  }

  .country {
    @include text-2;
    margin-bottom: 0;
  }

  .second-text {
    @include text;

    font-size: large;
    margin-bottom: 0;
    margin-top: 1em;
  }

  span {
    font-size: large;
    // margin-bottom: 1em;
    display: block;
    line-height: 1.2em;
  }
}

$colors: (
  "pink": $pink-400,
  "green": $green-400,
  "blue": $blue-400,
  "red": $red-400,
  "purple": $purple-400
);

@each $color-name,
$color in $colors {
  .glow-btn-#{$color-name} {
    background: radial-gradient(color.adjust($color, $lightness: 10%), $color);
    border-radius: 50px;
    border: none;
    padding: 10px 15px 10px 15px;
    font-size: large;
    font-weight: bold;
    color: map-get($themes, "dark", text);
    box-shadow: 0px 0px 20px 0px color.adjust($color, $alpha: -0.2);
    margin: 10px;

    &:active {
      box-shadow: 0px 0px 20px 2px color.adjust($color, $alpha: -0.2);
    }

    &:focus {
      outline: none;
    }

    @media (prefers-color-scheme: dark) {
      background: radial-gradient($color, color.adjust($color, $lightness: -10%));
      box-shadow: 0px 0px 15px 0px color.adjust($color, $lightness: -5%, $alpha: -0.2);

      &:active {
        box-shadow: 0px 0px 15px 2px color.adjust($color, $lightness: -5%, $alpha: -0.2);
      }
    }
  }

  .glow-text-form-#{$color-name} {
    @include text;
    gap: 10px;
    font-size: large;
    padding: 10px 15px 10px 15px;
    display: inline-block;
    width: 60%;
    border-radius: 50px;
    background: linear-gradient(map-get($themes, "light", body), map-get($themes, "light", body)) padding-box,
      linear-gradient(45deg, color.adjust($color, $lightness: 10%), color.adjust($color, $lightness: 20%)) border-box;
    border: 3px solid transparent;
    box-shadow: 0px 0px 10px 2px color.adjust($color, $alpha: -0.5);

    &:focus {
      outline: none;
    }

    @media (prefers-color-scheme: dark) {
      background: linear-gradient(map-get($themes, "dark", body), map-get($themes, "dark", body)) padding-box,
        linear-gradient(45deg, color.adjust($color, $lightness: -15%), color.adjust($color, $lightness: -25%)) border-box;
      box-shadow: 0px 0px 10px 2px color.adjust($color, $lightness: -5%, $alpha: -0.5);
    }
  }

  .glow-card-#{$color-name} {
    @include text;

    text-align: left;
    border-radius: 20px;
    border: none;
    box-shadow: 0px 0px 10px 2px color.adjust($color, $alpha: -0.5);
    padding: 10px;
    flex: 300px;
    background: radial-gradient(color.adjust($color, $alpha: -0.75), transparent);

    @media (prefers-color-scheme: dark) {
      background: radial-gradient(transparent, color.adjust($color, $alpha: -0.9));
    }

    .card-info {
      display: flex;
      flex-wrap: wrap;

      img {
        display: block;
        margin-left: auto;
        margin-right: auto;
        margin-top: 10px;
        margin-bottom: 10px;
        max-width: 250px;
        height: max-content;
        border-radius: 20px;
      }

      .card-text {
        @include text-styles;
        max-height: 300px;
        overflow: hidden;
      }
    }

    .buttons {
      margin-left: 5px;
      margin-bottom: 5px;
      display: flex;
      flex-wrap: wrap;
      gap: 10px;

      .cal {
        @extend .glow-btn-#{$color-name};
      }

      .more {
        @if $color-name !="blue" {
          @extend .glow-btn-blue;
        }

        @else {
          @extend .glow-btn-green;
        }
      }

      button {
        max-width: min-content;
        min-width: 5em;
        margin: 0 !important;
      }
    }
  }
}

#finder {
  display: grid;
  grid-template-columns: 300px 1fr;
  @include media-breakpoint-down(md) {
    grid-template-columns: 1fr;
  }
}

#top-elements {
  justify-content: center;
  position: relative;
  #find-field {
    @extend .glow-text-form-pink;
  }
  #find-button {
    @extend .glow-btn-blue;
    #find-button-text {
      display: inline-block;
      @include media-breakpoint-down(md) {
        display: none;
      }
    }
    #find-button-icon {
      display: none;
      @include media-breakpoint-down(md) {
        display: inline-block;
      }
    }
  }
  #show-calendar {
    @extend .glow-btn-green;
    position: relative;
    @include media-breakpoint-down(md) {
      display: block;
      position: fixed;
      bottom: 64px;
      right: 0;
    }
  }
  #show-filters {
    @extend .glow-btn-red;
    display: none;
    position: relative;
    @include media-breakpoint-down(md) {
      display: block;
      position: fixed;
      bottom: 0;
      right: 0;
    }
  }
}

path {
  fill: map-get($themes, "dark", text);
}

.box {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  padding: 20px;
}

.row-cell {
  flex-shrink: 0;
  flex-grow: 1;
}

.week {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.pillar {
  display: flex;
  justify-content: center;
}

#med {
  @include text-styles();
  text-align: left;

  .main-info {
    display: flex;
    gap: 40px;
    flex-wrap: wrap;

    img {
      display: block;
      width: 400px;
      height: auto;

      @media screen and (max-width: 450px) {
        width: 100%;
      }

      border: 2px solid $pink-400;
      border-radius: 20px;
      box-shadow: 0px 0px 10px 2px color.adjust($pink-400, $alpha: -0.5);
    }

    button {
      display: block;
      margin-top: 1em;
      margin-bottom: 1em;
      margin-left: 0;
      @extend .glow-btn-pink;
    }
  }

  button {
    margin-left: 0;
    @extend .glow-btn-purple;
  }
}

.space {
  margin-top: 20px;
}

body {
  background: map-get($themes, "light", body);

  @media (prefers-color-scheme: dark) {
    background: map-get($themes, "dark", body);
  }

  @include text;
  overflow: overlay;
}